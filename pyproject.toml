[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "iomt-swarm-range"
version = "0.1.0"
description = "Swarm Intelligence Cyber Range for Healthcare IoT Security"
authors = ["Research Team <research@example.edu>"]
readme = "README.md"
license = "Apache-2.0"
packages = [
    { include = "swarm" },
    { include = "sensors" },
    { include = "devices" },
    { include = "injector" },
    { include = "training" },
    { include = "analysis" },
    { include = "scripts" },
]
keywords = ["iot", "cybersecurity", "swarm-intelligence", "healthcare", "cyber-range"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.11",
    "Topic :: Security",
]

[tool.poetry.dependencies]
python = "^3.11"
numpy = "^1.26.0"
pandas = "^2.1.0"
scipy = "^1.11.0"
scikit-learn = "^1.3.0"
pyyaml = "^6.0"
typer = "^0.12.0"
rich = "^13.7.0"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
pyarrow = "^14.0.0"
paho-mqtt = "^2.0.0"
pyzmq = "^25.1.0"
structlog = "^24.1.0"
prometheus-client = "^0.19.0"
flask = "^3.0.0"
flask-socketio = "^5.3.0"
plotly = "^5.18.0"
scapy = "^2.5.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.0"
pytest-mock = "^3.12.0"
pytest-timeout = "^2.2.0"
ruff = "^0.2.0"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
ipython = "^8.20.0"
jupyter = "^1.0.0"
matplotlib = "^3.8.0"
seaborn = "^0.13.0"
types-pyyaml = "^6.0.0"

[tool.poetry.scripts]
iomt-range = "scripts.cli:app"

[tool.ruff]
line-length = 100
target-version = "py311"
exclude = [".venv", "build", "dist", "__pycache__"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = ["E501"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --cov=swarm --cov=sensors --cov=devices --cov-report=term-missing --cov-report=html --cov-report=xml"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
timeout = 300

[tool.coverage.run]
branch = true
source = ["swarm", "sensors", "devices", "injector", "training"]
omit = ["tests/*", "*/__pycache__/*", ".venv/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
